/*
 * This file is generated by jOOQ.
 */
package ru.xpendence.jooqexample.domain;


import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.xpendence.jooqexample.domain.tables.Cities;
import ru.xpendence.jooqexample.domain.tables.Countries;
import ru.xpendence.jooqexample.domain.tables.records.CitiesRecord;
import ru.xpendence.jooqexample.domain.tables.records.CountriesRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CitiesRecord, Long> IDENTITY_CITIES = Identities0.IDENTITY_CITIES;
    public static final Identity<CountriesRecord, Long> IDENTITY_COUNTRIES = Identities0.IDENTITY_COUNTRIES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CitiesRecord> CITIES_PKEY = UniqueKeys0.CITIES_PKEY;
    public static final UniqueKey<CountriesRecord> COUNTRIES_PKEY = UniqueKeys0.COUNTRIES_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CitiesRecord, Long> IDENTITY_CITIES = Internal.createIdentity(Cities.CITIES, Cities.CITIES.ID);
        public static Identity<CountriesRecord, Long> IDENTITY_COUNTRIES = Internal.createIdentity(Countries.COUNTRIES, Countries.COUNTRIES.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CitiesRecord> CITIES_PKEY = Internal.createUniqueKey(Cities.CITIES, "cities_pkey", Cities.CITIES.ID);
        public static final UniqueKey<CountriesRecord> COUNTRIES_PKEY = Internal.createUniqueKey(Countries.COUNTRIES, "countries_pkey", Countries.COUNTRIES.ID);
    }
}
